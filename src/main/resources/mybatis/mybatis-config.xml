<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "classpath:/mybatis-3-config.dtd">-->
<configuration>

    <!-- 全局参数 -->
    <settings>
        <!-- 使全局的映射器启用或禁用缓存。 -->
        <setting name="cacheEnabled" value="true"/>

        <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
        <setting name="lazyLoadingEnabled" value="false"/>

        <!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性(对象中有2个懒加载的属性organization和user，启用时，2个
              属性都将被加载，false只加载需要的那个属性)。否则，每种属性将会按需要加载。 -->
        <setting name="aggressiveLazyLoading" value="false"/>

        <!-- 是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true -->
        <setting name="multipleResultSetsEnabled" value="true"/>

        <!-- 是否可以使用列的别名 (取决于驱动的兼容性) default:true -->
        <setting name="useColumnLabel" value="true"/>

        <!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false  -->
        <setting name="useGeneratedKeys" value="true"/>

        <!-- 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部
         NONE 表示取消自动映射；PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 FULL会自动映射任意复杂的结果集,无论是否嵌套-->
        <setting name="autoMappingBehavior" value="PARTIAL"/>

        <!-- 这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）  -->
        <setting name="defaultExecutorType" value="SIMPLE"/>

        <!-- 使用驼峰命名法转换字段。 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>

        <!-- 设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session -->
        <setting name="localCacheScope" value="SESSION"/>

        <!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER。 -->
        <setting name="jdbcTypeForNull" value="NULL"/>

        <!--指定当结果集中值为 null 的时候是否调用映射对象的 setter（map 对象时为 put）方法，这对于有 Map.keySet() 依赖或 null 值初始化的时候是有用的。注意基本类型（int、boolean等）是不能设置成 null 的-->
        <setting name="callSettersOnNulls" value="false"/>

    </settings>

    <!-- 类型别名 -->
    <typeAliases>
        <!--<typeAlias alias="Page" type="com.ynsh.common.core.persistence.Page" />&lt;!&ndash;分页  &ndash;&gt;-->
        <!--
        <typeAlias type="com.ynsh.ims.modules.lctj.entity.Product" alias="LcProduct" />

        <package name="com.ynsh.ims.modules.sys.entity" />
        <package name="com.ynsh.ims.modules.cktj.entity" />
        <package name="com.ynsh.ims.modules.hxsj.entity" />
        <package name="com.ynsh.ims.modules.ckcp.entity" />
        <package name="com.ynsh.ims.modules.lctj.entity" />
        -->

    </typeAliases>


    <!-- 插件配置 -->
    <!--<plugins>-->
        <!--<plugin interceptor="com.ynsh.common.core.persistence.interceptor.PaginationInterceptor" />-->
    <!--</plugins>-->
    <!--<plugins>-->
    <!--<plugin interceptor="com.github.pagehelper.PageHelper">-->
    <!--<property name="dialect" value="postgresql" />-->
    <!--</plugin>-->
    <!--</plugins>-->

</configuration>
